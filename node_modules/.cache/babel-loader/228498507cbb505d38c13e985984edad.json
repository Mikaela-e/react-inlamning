{"ast":null,"code":"var _jsxFileName = \"/Users/mikaelaengborg/Desktop/New/animals/src/components/TheAnimals.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./TheAnimals.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TheAnimals = () => {\n  _s();\n\n  const [animal, setAnimal] = useState([]);\n  const [animalsId, setAnimalsId] = useState(0);\n  const [theAnimalIsFed, setTheAnimalIsFed] = useState(false);\n  const [theAnimalsNotFed, setTheAnimalsNotFed] = useState(false);\n  let p = useParams();\n  useEffect(() => {\n    if (p.id) {\n      setAnimalsId(+p.id);\n    }\n  });\n\n  function feedTheAnimal() {\n    setTheAnimalIsFed(true);\n    setTheAnimalsNotFed(true);\n  }\n\n  useEffect(() => {\n    let animalLS = sessionStorage.getItem(\"Animals\");\n\n    if (animalLS) {\n      setAnimal(JSON.parse(animalLS));\n    }\n  }, []);\n  let theAnimalDetails = animal.map(animal => {\n    let theDate = new Date();\n    let theTimeForToDay = \"Datum:\" + \" \" + theDate.getFullYear() + '-' + (theDate.getMonth() + 1) + '-' + theDate.getDate() + \" \" + \"Klockan:\" + theDate.getHours() + \":\" + theDate.getMinutes();\n\n    if (animalsId === animal.id) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animalsContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: animal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: animal.imageUrl,\n              className: \"picture1\",\n              width: \"300px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: animal.latinName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Beskrivning om djuret:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: animal.longDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"F\\xF6ddes: \", animal.yearOfBirth]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Medicin till djuret: \", animal.medicine]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              disabled: theAnimalsNotFed,\n              onClick: feedTheAnimal,\n              children: \"Mata Djuret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: theAnimalIsFed && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Djuret matades senast: \", theTimeForToDay]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this)]\n          }, animal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: theAnimalDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Animals\",\n      className: \"theLink\",\n      children: \"G\\xE5 tillbaks till alla djuren\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TheAnimals, \"KO8yj0SuQ7nV6Rb6eUHhcbsQRj0=\", false, function () {\n  return [useParams];\n});\n\n_c = TheAnimals;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheAnimals\");","map":{"version":3,"sources":["/Users/mikaelaengborg/Desktop/New/animals/src/components/TheAnimals.tsx"],"names":["useEffect","useState","Link","useParams","TheAnimals","animal","setAnimal","animalsId","setAnimalsId","theAnimalIsFed","setTheAnimalIsFed","theAnimalsNotFed","setTheAnimalsNotFed","p","id","feedTheAnimal","animalLS","sessionStorage","getItem","JSON","parse","theAnimalDetails","map","theDate","Date","theTimeForToDay","getFullYear","getMonth","getDate","getHours","getMinutes","name","imageUrl","latinName","longDescription","yearOfBirth","medicine"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\";\nimport { IAnimal } from \"../models/IAnimal\";\nimport \"./TheAnimals.css\";\n\nexport const TheAnimals = () => {\n    const [animal, setAnimal] = useState<IAnimal[]>([]);\n    const [animalsId, setAnimalsId] = useState(0);\n    const [theAnimalIsFed, setTheAnimalIsFed] = useState(false)\n    const [theAnimalsNotFed, setTheAnimalsNotFed] = useState(false)\n\n    let p = useParams();\n\n    useEffect(()=>{\n        if(p.id){\n        setAnimalsId(+p.id)\n        }\n    })\n    function feedTheAnimal(){\n        setTheAnimalIsFed(true);\n        setTheAnimalsNotFed(true);\n    }\n    useEffect(()=>{\n        let animalLS = sessionStorage.getItem(\"Animals\")\n        if(animalLS){\n            setAnimal(JSON.parse(animalLS));\n        }\n    },[]);\n\n    let theAnimalDetails =  animal.map((animal: IAnimal)=>{\n        let theDate = new Date()\n        let theTimeForToDay = \"Datum:\" + \" \" + theDate.getFullYear() + '-' + (theDate.getMonth() + 1) + '-' + theDate.getDate()\n        + \" \" + \"Klockan:\" + theDate.getHours()+\":\"+theDate.getMinutes()\n\n    if(animalsId === animal.id){\n        return(\n        <>\n        <div className=\"animalsContainer\">\n        <div key={animal.id}>\n        <h1>{animal.name}</h1>\n        <img src={animal.imageUrl} className=\"picture1\" width=\"300px\"/>\n        <p>{animal.latinName}</p>\n        <p>Beskrivning om djuret:</p>\n        <p>{animal.longDescription}</p>\n        <p>FÃ¶ddes: {animal.yearOfBirth}</p>\n        <p>Medicin till djuret: {animal.medicine}</p>\n        <button className=\"btn\" disabled={theAnimalsNotFed} onClick={feedTheAnimal}>Mata Djuret</button>\n        <div>{theAnimalIsFed && <p>Djuret matades senast: {theTimeForToDay}</p> }</div>\n        </div></div></>)\n        }\n    })\n\n    return(<>\n        <div>{theAnimalDetails}</div>\n        <Link to=\"/Animals\" className=\"theLink\">GÃ¥ tillbaks till alla djuren</Link>\n        </>)\n}"]},"metadata":{},"sourceType":"module"}